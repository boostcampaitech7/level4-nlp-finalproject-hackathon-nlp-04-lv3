# 터미널에 poetry run python test_text_explain.py 실행
import sys
import os

sys.path.append(os.path.abspath("../services/text_explain"))
import text_explain

# ✅ 샘플 테스트 데이터 (2~3문단, 약 20~30문장)
text = [
    """
한국 경제는 지난 수십 년 동안 꾸준한 성장을 이루어 왔다.
특히 1980년대와 1990년대에 걸쳐 경제 성장률이 급격히 상승하며 ‘한강의 기적’이라 불리는 경제적 발전을 이뤄냈다.
이러한 성장의 배경에는 정부의 산업화 정책, 수출 중심 경제 모델, 교육 수준의 향상 등이 있었다.
대기업들은 국제 시장에서 경쟁력을 확보하기 위해 기술 개발과 연구에 많은 투자를 했고,
중소기업들도 혁신적인 아이디어를 바탕으로 성장할 수 있는 기반을 마련했다.

하지만 최근 한국 경제는 여러 가지 도전에 직면하고 있다.
첫째, 인구 고령화로 인해 노동력 감소가 발생하고 있다.
젊은 노동 인구가 줄어들면서 생산성이 저하될 위험이 있다.
둘째, 글로벌 경기 침체와 보호무역주의 확산으로 인해 수출 의존도가 높은 한국 경제는 타격을 받을 가능성이 크다.
셋째, 기술 발전으로 인해 자동화와 인공지능(AI)이 많은 일자리를 대체할 것이라는 우려도 있다.
이에 따라 정부와 기업은 새로운 경제 성장 동력을 모색해야 하는 과제를 안고 있다.

최근에는 ‘디지털 경제’가 새로운 대안으로 떠오르고 있다.
인공지능, 빅데이터, 블록체인 등 4차 산업혁명 기술을 활용한 혁신적인 서비스와 제품이 등장하면서,
한국 기업들도 디지털 혁신에 박차를 가하고 있다.
정부 또한 스타트업 지원과 규제 완화를 통해 디지털 경제 활성화를 추진하고 있으며,
특히 IT 기업들은 새로운 시장을 개척하는 데 주력하고 있다.
이러한 변화가 한국 경제의 지속 가능한 성장에 기여할 수 있을지 주목된다.
""",
    """
블록체인 기술이 환경에 악영향을 미칠 수 있는 측면도 있다.
블록체인은 이중 지불 및 조작을 방지하기 위해 참여자 과반 수 이상이 합의를 하도록 하고 있다.
작업증명은 비트코인을 창시한 사토시 나카모토가 제안한 합의 알고리즘이다.
비트코인에서 새로운 블록을 앞 블록에 연결하기 위해서는 해시를 만들어야 하고 이를 위해서는 암호를 풀어야 하는데,
암호를 풀기 위해서는 수학적으로 매우 복잡한 계산을 해야 한다.
가장 먼저 암호를 푼 한 사람만이 가상통화를 받기 때문에 계산을 빨리 할 수 있는 성능 좋은 컴퓨터를 많이 가지고 있는 사람이 유리하다.
이 때문에 자본이 풍부한 참여자들은 더 많은 가상통화 보상을 받기 위해 소위 ‘채굴장’이라는 시설을 만들고, 엄청난 수의 고사양 컴퓨터를 계속 가동하여 가상통화를 채굴한다.
문제는 여기에 엄청난 전력이 소모된다는 것이다. 전 세계적으로 비트코인 채굴에만 들어가는 전력이 아일랜드 전국민이 같은 기간 쓰는 전력과 맞먹는다는 통계도 있다.
한 예로 2018년 초 러시아의 한 비트코인 채굴업체는 채굴에 필요한 전력을 충당하기 위해 발전소를 사들였다.
2018년 11월 미국 오크리지 과학교육연구소 연구진은 “비트코인뿐만 아니라 이더리움, 라이트코인 등 가상통화 채굴에 드는 에너지가 금을 비롯한 광물을 채굴하는 데 드는 에너지보다 2배 이상 많이 든다”고 발표하기도 하였다.
""",
]

# ✅ 테스트용 focused 데이터셋 (다양한 유형)
focused_dataset = [
    "경제 성장률",  # 단어
    "경제 성장률이 높아지면",  # 어구 (2~5단어)
    "경제 성장률이 높아지면 실업률이 감소하는 경향이 있다.",  # 문장
    """첫째, 인구 고령화로 인해 노동력 감소가 발생하고 있다.
    젊은 노동 인구가 줄어들면서 생산성이 저하될 위험이 있다.
    둘째, 글로벌 경기 침체와 보호무역주의 확산으로 인해 수출 의존도가 높은 한국 경제는 타격을 받을 가능성이 크다.""",  # 문단
]
focused_dataset = [
    [
        "블록체인",  # 단어
        "이중 지불",  # 단어
        "작업증명",  # 단어
        "합의 알고리즘",  # 단어
        "해시",  # 단어
        "채굴장",  # 단어
        "가상통화",  # 단어
        "암호를 푼다",  # 단어
        "전력 소모",  # 단어
    ],
    [
        "블록체인이 환경에 미치는 영향",  # 어구 (2~5 단어)
        "이중 지불 및 조작 방지",  # 어구 (2~5 단어)
        "비트코인의 작업증명 방식",  # 어구 (2~5 단어)
        "비트코인 채굴의 전력 소비 문제",  # 어구 (2~5 단어)
        "비트코인 보상 시스템",  # 어구 (2~5 단어)
        "가상통화 채굴의 에너지 소비",  # 어구 (2~5 단어)
        "암호를 풀기 위한 복잡한 계산",  # 어구 (2~5 단어)
        "전력 소모와 환경 영향",  # 어구 (2~5 단어)
        "고사양 컴퓨터를 활용한 채굴",  # 어구 (2~5 단어)
    ],
    [
        "비트코인에서 새로운 블록을 앞 블록에 연결하기 위해서는 해시를 만들어야 하고 이를 위해서는 암호를 풀어야 하는데, 암호를 풀기 위해서는 수학적으로 매우 복잡한 계산을 해야 한다.",  # 문장 (6~20 단어)
        "이 때문에 자본이 풍부한 참여자들은 더 많은 가상통화 보상을 받기 위해 소위 ‘채굴장’이라는 시설을 만들고, 엄청난 수의 고사양 컴퓨터를 계속 가동하여 가상통화를 채굴한다.",  # 문장 (6~20 단어)
        "전 세계적으로 비트코인 채굴에만 들어가는 전력이 아일랜드 전국민이 같은 기간 쓰는 전력과 맞먹는다는 통계도 있다.",  # 문장 (6~20 단어)
        "2018년 11월 미국 오크리지 과학교육연구소 연구진은 “비트코인뿐만 아니라 이더리움, 라이트코인 등 가상통화 채굴에 드는 에너지가 금을 비롯한 광물을 채굴하는 데 드는 에너지보다 2배 이상 많이 든다”고 발표하기도 하였다.",  # 문장 (6~20 단어)
    ],
    [
        """비트코인에서 새로운 블록을 앞 블록에 연결하기 위해서는 해시를 만들어야 하고 이를 위해서는 암호를 풀어야 하는데,
        암호를 풀기 위해서는 수학적으로 매우 복잡한 계산을 해야 한다. 가장 먼저 암호를 푼 한 사람만이 가상통화를 받기 때문에
        계산을 빨리 할 수 있는 성능 좋은 컴퓨터를 많이 가지고 있는 사람이 유리하다.""",  # 문단 (20 단어 이상)
        """이 때문에 자본이 풍부한 참여자들은 더 많은 가상통화 보상을 받기 위해 소위 ‘채굴장’이라는 시설을 만들고,
        엄청난 수의 고사양 컴퓨터를 계속 가동하여 가상통화를 채굴한다. 문제는 여기에 엄청난 전력이 소모된다는 것이다.""",  # 문단 (20 단어 이상)
        """전 세계적으로 비트코인 채굴에만 들어가는 전력이 아일랜드 전국민이 같은 기간 쓰는 전력과 맞먹는다는 통계도 있다.
        한 예로 2018년 초 러시아의 한 비트코인 채굴업체는 채굴에 필요한 전력을 충당하기 위해 발전소를 사들였다.""",  # 문단 (20 단어 이상)
    ],
]


def test_hcx_api():
    """
    HCX API에 요청을 보내고 응답을 확인하는 테스트.
    """
    for dataset in focused_dataset:
        for focused in dataset:
            prompt = text_explain.generate_focused_prompt(text[1], focused)
            response = text_explain.query_hyperclovax(prompt)

            print("\n📌 [HCX API 테스트] 드래그된 부분:", focused)
            print("🔹 생성된 프롬프트:\n", prompt)
            print("✅ AI 응답 결과:\n", response)
            print("=" * 80)


if __name__ == "__main__":
    print("🚀 HCX API 테스트 실행 중...")
    test_hcx_api()
